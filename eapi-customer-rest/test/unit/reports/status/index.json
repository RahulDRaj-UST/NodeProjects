{
  "stats": {
    "suites": 4,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2021-02-18T16:22:52.947Z",
    "end": "2021-02-18T16:22:53.080Z",
    "duration": 133,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "d624a253-3377-492b-9c6b-90ac22626aa8",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "95b8e1b8-d418-4d41-add6-6c142b794d5f",
        "title": "/GET ping service",
        "fullFile": "D:\\myWork\\NodeJs-Projects\\eapi-customer-rest\\test\\unit\\test.js",
        "file": "\\test\\unit\\test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "it should GET ping status message",
            "fullTitle": "/GET ping service it should GET ping status message",
            "timedOut": false,
            "duration": 27,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(url)\n\t.get('/v1/pharmacy/patient/ping')\n\t.end((err, res) => {\n\t\tres.should.have.status(200);\n\t\tres.body.status.should.equal('ok');\n\t\tres.body.apiname.should.equal('eapi-customer-rest');\n\t\tres.body.apiversion.should.equal('v1_0_0');\n\t\tdone();\n\t});",
            "err": {},
            "isRoot": false,
            "uuid": "5ecc2a6d-6177-451d-8db4-d6c69f308f85",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "5ecc2a6d-6177-451d-8db4-d6c69f308f85"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 27,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "557924e2-ae0b-4461-97ab-d2e69457b9dd",
        "title": "Test Info/Debug/Error Message Logging",
        "fullFile": "D:\\myWork\\NodeJs-Projects\\eapi-customer-rest\\test\\unit\\test.js",
        "file": "\\test\\unit\\test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "it should log info message",
            "fullTitle": "Test Info/Debug/Error Message Logging it should log info message",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "logging.logInfo(\"SampleAplicationName\",101,1001,1,\"GET\",\"200\",\"Success\",\"TestInfoLog\",\"100ms\",null,null);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "92f11c84-5db5-497e-93a5-b4776c624faf",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "it should log info message",
            "fullTitle": "Test Info/Debug/Error Message Logging it should log info message",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "logging.logInfo(null,102,1002,1,\"GET\",\"200\",\"Success\",\"TestInfoLog\",\"100ms\",null,null);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "febad2a8-cf50-41f8-928e-c786df5b98a7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "it should log Debug message",
            "fullTitle": "Test Info/Debug/Error Message Logging it should log Debug message",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "logging.logDebug(\"SampleAplicationName\",103,1003,2,\"GET\",\"200\",\"Success\",\"TestDebugLog\",\"150ms\",null,null);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "0d8c9123-8b16-4b0b-a81b-ac7aa62b639e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "it should log Debug message",
            "fullTitle": "Test Info/Debug/Error Message Logging it should log Debug message",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "logging.logDebug(null,104,1004,2,\"GET\",\"200\",\"Success\",\"TestDebugLog\",\"150ms\",null,null);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "00be6c9c-033c-42cf-90ca-b2efc9c213e7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "it should log error message",
            "fullTitle": "Test Info/Debug/Error Message Logging it should log error message",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let error = new Error(\"Internal Error\")\nlogging.logError(\"SampleAplicationName\",105,1005,3,\"GET\",\"500\",\"Failure\",\"Error Occured %s\", \"50ms\",\"KFK-ERR-001\",\"Error accessing input topic\",error);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "e0840be6-1dc8-4ab6-a184-66a1e14d4096",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "it should log error message",
            "fullTitle": "Test Info/Debug/Error Message Logging it should log error message",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let error = new Error(\"Internal Error\")\nlogging.logError(null,106,1006,3,\"GET\",\"500\",\"Failure\",\"Error Occured %s\", \"50ms\",\"KFK-ERR-001\",\"Error accessing input topic\",error);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "3f96c2e9-eb58-4f9d-86ff-4d9bf29856af",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "92f11c84-5db5-497e-93a5-b4776c624faf",
          "febad2a8-cf50-41f8-928e-c786df5b98a7",
          "0d8c9123-8b16-4b0b-a81b-ac7aa62b639e",
          "00be6c9c-033c-42cf-90ca-b2efc9c213e7",
          "e0840be6-1dc8-4ab6-a184-66a1e14d4096",
          "3f96c2e9-eb58-4f9d-86ff-4d9bf29856af"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 2,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "03fd6427-d4d9-42a3-9d6c-d14996eb54bc",
        "title": "POST /v1/pharmacy/patient/",
        "fullFile": "D:\\myWork\\NodeJs-Projects\\eapi-customer-rest\\test\\unit\\test.js",
        "file": "\\test\\unit\\test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "POST /v1/pharmacy/patient/ \"before all\" hook",
            "timedOut": false,
            "duration": 5,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "var dbo = global.db.db(\"eapi_data\");\n\n\t\t/**Test Obj Creation */\n\t\tvar patientTestDoc = {\n\n\t\t\tpatientId: \"TXTX001\",\n\t\t\tfirstName: \"NAME001\" ,\n\t\t\taddressLine1:\"ADRESLINE1\",\n\t\t\tcity:\"CITY001\",\n\t\t\tzipCode:\"ZIP001\",\n\t\t\tstate:\"STATE001\",\n\t\t\tcardType:\"CARDTYPE001\",\n\t\t\tcreditCard:\"CRD001\",\n\t\t\tlastFourDigits:\"0000\",\n\t\t\texpiryMonth:\"12\",\n\t\t\texpiryYear:\"1111\",\n\t\t\tisDefault:true\n\t\t};\n\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tdbo.collection(\"tbf0_patient\").insertOne(patientTestDoc, function(err,res) {\n\t\t\tif (err) throw err;\n\t\t});\n\t\tdone();",
            "err": {},
            "isRoot": false,
            "uuid": "bcd95728-6bc1-4a32-b481-df1fc642a2d1",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "POST /v1/pharmacy/patient/ \"after all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "var dbo = global.db.db(\"eapi_data\");\n\t\tvar deleteQuery = { patientId: 'TXTX001' };\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tdbo.collection(\"tbf0_patient\").deleteOne(deleteQuery, function(err,res) {\n\t\t\tif (err) throw err;\n\t\t});\n\t\tdone();",
            "err": {},
            "isRoot": false,
            "uuid": "16abb5db-4cd7-4fcb-a2a3-dec21d74e3b3",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "it should get patient info",
            "fullTitle": "POST /v1/pharmacy/patient/ it should get patient info",
            "timedOut": false,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)\n\t\t.post(\"/v1/pharmacy/patient?patientId=TXTX001\")\n\t\t.set(\"Authorization\",\"001\")\n\t\t.end((err,response)=>{\n\t\t\t\n\t\t\tresponse.should.have.status(200);\n\t\t\tresponse.body.should.be.a('object');\n\t\t\t\n\t\t\tresponse.body.should.have.property('patientId').eq(\"TXTX001\");\n\t\t\tresponse.body.should.have.property('customerShippingAddress');\n\t\t\tresponse.body.customerShippingAddress.should.have.property('addressLine1').eq(\"ADRESLINE1\");\n\t\t\tresponse.body.profilePaymentDetails[0].should.have.property('cardType').eq(\"CARDTYPE001\");\n\t\t\tdone();\n\t\t});",
            "err": {},
            "isRoot": false,
            "uuid": "b29a4c3e-94fd-44c9-bd0f-e71a95696890",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "it should return 404 when no matching records",
            "fullTitle": "POST /v1/pharmacy/patient/ it should return 404 when no matching records",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)\n\t\t.post(\"/v1/pharmacy/patient?patientId=TXTX001001\")\n\t\t.set(\"Authorization\",\"001\")\n\t\t.end((err,response)=>{\n\t\t\n\t\t\tresponse.should.have.status(404);\n\t\t\tresponse.body.should.be.a('object');\n\t\t\tresponse.body.should.have.property('messages');\n\t\t\tresponse.body.messages[0].should.have.property('code').eq('WAG_E_SEARCH_1000');\n\t\t\tresponse.body.messages[0].should.have.property('type').eq('ERROR');\n\t\t\tdone();\n\t\t});",
            "err": {},
            "isRoot": false,
            "uuid": "28309435-8e70-4667-8945-68a5d6f6bd3d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "it should return 405 when invalid method call",
            "fullTitle": "POST /v1/pharmacy/patient/ it should return 405 when invalid method call",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)\n\t\t.get(\"/v1/pharmacy/patient?patientId=TXTX001\")\n\t\t.set(\"Authorization\",\"001\")\n\t\t.end((err,response)=>{\n\t\t\tresponse.should.have.status(405);\n\t\t\tresponse.body.should.be.a('object');\n\t\t\tresponse.body.should.have.property('messages');\n\t\t\tresponse.body.messages[0].should.have.property('code').eq('WAG_E_INVALID_METHOD_1001');\n\t\t\tresponse.body.messages[0].should.have.property('type').eq('ERROR');\n\t\t\tdone();\n\t\t});",
            "err": {},
            "isRoot": false,
            "uuid": "c6343d5c-0082-4dc8-94f1-635d0957815e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "it should return 401 if not authenticated",
            "fullTitle": "POST /v1/pharmacy/patient/ it should return 401 if not authenticated",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)\n\t\t.post(\"/v1/pharmacy/patient?patientId=TXTX001\")\n\t\t.end((err,response)=>{\n\t\t\tresponse.should.have.status(401);\n\t\t\tresponse.body.should.be.a('object');\n\t\t\tresponse.body.should.have.property('messages');\n\t\t\tresponse.body.messages[0].should.have.property('code').eq('WAG_E_UNAUTHORIZED_REQUEST_1001');\n\t\t\tresponse.body.messages[0].should.have.property('type').eq('ERROR');\n\t\t\tdone();\n\t\t});",
            "err": {},
            "isRoot": false,
            "uuid": "14ee07fd-9a69-434e-b32a-e8e67e529e20",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "it should return 400 when request have missing patientId",
            "fullTitle": "POST /v1/pharmacy/patient/ it should return 400 when request have missing patientId",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)\n\t\t.post(\"/v1/pharmacy/patient\")\n\t\t.end((err,response)=>{\n\t\t\tresponse.should.have.status(400);\n\t\t\tresponse.body.should.be.a('object');\n\t\t\tresponse.body.should.have.property('messages');\n\t\t\tresponse.body.messages[0].should.have.property('code').eq('WAG_E_INVALID_REQUEST_1001');\n\t\t\tresponse.body.messages[0].should.have.property('type').eq('ERROR');\n\t\t\tdone();\n\t\t});",
            "err": {},
            "isRoot": false,
            "uuid": "6f75a414-d53e-43b2-89bf-c1017e44a383",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [
          {
            "uuid": "6d633f8c-ff6e-4c7e-be56-efa427457bf7",
            "title": "Test DB Conectivity",
            "fullFile": "D:\\myWork\\NodeJs-Projects\\eapi-customer-rest\\test\\unit\\test.js",
            "file": "\\test\\unit\\test.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "POST /v1/pharmacy/patient/ Test DB Conectivity \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "dbconnection=global.db;\n\t\t\tglobal.db=undefined;//mocking db- connection as 'undefined'\n\t\t\tdone();",
                "err": {},
                "isRoot": false,
                "uuid": "bc770e86-1f9f-4865-a741-09a6e613594b",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [
              {
                "title": "\"after all\" hook",
                "fullTitle": "POST /v1/pharmacy/patient/ Test DB Conectivity \"after all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "global.db=dbconnection; //resetting db connection back.\n\t\t\tdone();",
                "err": {},
                "isRoot": false,
                "uuid": "5eac91a6-6386-4822-9728-f558a7b5e19e",
                "isHook": true,
                "skipped": false
              }
            ],
            "tests": [
              {
                "title": "it should return 503 when db is down",
                "fullTitle": "POST /v1/pharmacy/patient/ Test DB Conectivity it should return 503 when db is down",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n.post(\"/v1/pharmacy/patient?patientId=TXTX001\")\n.set(\"Authorization\",\"001\")\n.end((err,response)=>{\n\t\n\tresponse.should.have.status(503);\n\tresponse.body.should.be.a('object');\n\tresponse.body.should.have.property('messages');\n\tresponse.body.messages[0].should.have.property('code');\n\tresponse.body.messages[0].should.have.property('type');\n\tdone();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "517ab5a2-e79d-41dc-bb43-003eb1a9fdb0",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "517ab5a2-e79d-41dc-bb43-003eb1a9fdb0"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 5,
            "root": false,
            "rootEmpty": false,
            "_timeout": 10000
          }
        ],
        "passes": [
          "b29a4c3e-94fd-44c9-bd0f-e71a95696890",
          "28309435-8e70-4667-8945-68a5d6f6bd3d",
          "c6343d5c-0082-4dc8-94f1-635d0957815e",
          "14ee07fd-9a69-434e-b32a-e8e67e529e20",
          "6f75a414-d53e-43b2-89bf-c1017e44a383"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 44,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 10000
  },
  "copyrightYear": 2021
}